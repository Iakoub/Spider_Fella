[gcode_macro START_PRINT]
description: Machine heatup procedure before starting a print
variable_bed_temp: 0
variable_extruder_temp: 0
variable_z_adjust: 0
variable_soak: 0
variable_total_layer: 0
gcode:
    # Get all the parameters passed from the slicer
    {% set BED_TEMP = params.BED_TEMP|default(printer["gcode_macro _USER_VARIABLES"].print_default_bed_temp)|float %} # Bed temperature
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(printer["gcode_macro _USER_VARIABLES"].print_default_extruder_temp)|float %} # Extruder temperature
    {% set Z_ADJUST = params.Z_ADJUST|default(0)|float %}  # Optionnal Z adjustement from the slicer profile (ex. use it if you have textured vs smooth slicer profiles) 
    {% set SOAK = params.SOAK|default(printer["gcode_macro _USER_VARIABLES"].print_default_soak)|int %} # Heatsoak time of the bed in minutes
    

    # Set the variables to be used in all the modules based on the slicer parameters
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=bed_temp VALUE={BED_TEMP}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=extruder_temp VALUE={EXTRUDER_TEMP}
    SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=soak VALUE={SOAK}    

    {% if params.TOTAL_LAYER %} # total layers count (if provided by the slicer)
        SET_PRINT_STATS_INFO TOTAL_LAYER={params.TOTAL_LAYER|int}
        SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=total_layer VALUE={params.TOTAL_LAYER|int}
    {% endif %}

    # Get all the config options and configurations for this macro
    {% set verbose = printer["gcode_macro _USER_VARIABLES"].verbose %}
    {% set force_homing_in_START_PRINT = printer["gcode_macro _USER_VARIABLES"].force_homing_in_START_PRINT %}
    {% set firmware_retraction_enabled = printer["gcode_macro _USER_VARIABLES"].firmware_retraction_enabled %}

    # --------------------------------
    # Let's do the START_PRINT actions
    # --------------------------------
    CLEAR_PAUSE

    SET_GCODE_OFFSET Z=0
    M221 S100
    M220 S100
    G90
    M83

    # Homing before START_PRINT movements and actions
    G28
    G1 Z130
    
    # Here is the core of the START_PRINT were we get the startprint_actions variable
    # to do the procedure in the correct order for the configured probe (or user custom override)
    {% set sp_actions = printer["gcode_macro _USER_VARIABLES"].startprint_actions %}
    {% for action in sp_actions %}
        {% if action == "bed_soak" %}
            _MODULE_HEATSOAK_BED
        {% elif action == "chamber_soak" %}
            _MODULE_HEATSOAK_CHAMBER
        {% elif action == "tilt_calib" %}
            _MODULE_TILTING
        {% elif action == "extruder_heating" %}
            _MODULE_EXTRUDER_HEATING
        {% elif action == "purge" %}
            _MODULE_PURGE
        {% elif action == "clean" %}
            _MODULE_CLEAN
        {% elif action == "z_offset" %}
            _MODULE_Z_CALIB
        {% elif action == "bedmesh" %}
            _MODULE_BED_MESH
        {% elif action == "primeline" %}
            _MODULE_PRIMELINE
        {% elif action == "extruder_preheating" %}
            _MODULE_EXTRUDER_PREHEATING
        {% elif action == "custom1" %}
            _MODULE_CUSTOM1 {rawparams}
        {% elif action == "custom2" %}
            _MODULE_CUSTOM2 {rawparams}
        {% elif action == "custom3" %}
            _MODULE_CUSTOM3 {rawparams}
        {% else %}
            { action_raise_error("Unknown module called in START_PRINT! Please verify your startprint_actions variable override!") }
        {% endif %}
    {% endfor %}

    # Fine adjustement of z offset (from the slicer profile). This is used to do a custom adjustement
    # when using textured/smooth PEI sheets, or for a special material from the slicer, etc...
    SET_GCODE_OFFSET Z_ADJUST={Z_ADJUST} MOVE=1

    {% if verbose %}
        RESPOND MSG="Start printing !"
    {% endif %}

    G92 E0.0

[gcode_macro _MODULE_HEATSOAK_BED]
gcode:
    # ----- BED HEATSOAK -------------------------------------
    # Heatsoak the bed if SOAK time is set and bed is not already warming up to the correct temperature (+-8Â°C).
    # We make the assumption that the soak is not needed if the bed is already at the correct target.
    # We also use the recirculating filter under the bed (if available) at full power to spread the heat
    # during the heatsoak if a specific temperature need to be reached.
    {% set BED_TEMP = printer["gcode_macro START_PRINT"].bed_temp %}
    {% set SOAK = printer["gcode_macro START_PRINT"].soak %}

    HEATSOAK_BED TEMP={BED_TEMP} SOAKTIME=0

[gcode_macro _MODULE_EXTRUDER_HEATING]
gcode:
    # ----- EXTRUDER HEATING ---------------------------------
    # Heat the nozzle to print temperature ontop of the purge bucket (if available) or in the middle of the bed
    {% set EXTRUDER_TEMP = printer["gcode_macro START_PRINT"].extruder_temp %}

    {% set verbose = printer["gcode_macro _USER_VARIABLES"].verbose %}

    {% if verbose %}
        RESPOND MSG="Extruder heating to print temperature..."
    {% endif %}

#    M109 S{params.TOOL_TEMP}
    M109 S{EXTRUDER_TEMP}

    {% if verbose %}
        RESPOND MSG="Extruder temperature OK"
    {% endif %}

[gcode_macro _MODULE_EXTRUDER_PREHEATING]
gcode:
    # Preheat the nozzle to safe probing temperature.
    {% set safe_extruder_temp = printer["gcode_macro _USER_VARIABLES"].safe_extruder_temp|float %}
    {% set verbose = printer["gcode_macro _USER_VARIABLES"].verbose %}

    {% if verbose %}
        RESPOND MSG="Pre-heating the nozzle to a safe temperature..."
    {% endif %}

    {% if probe_type_enabled == "vorontap" %}
        M109 S{safe_extruder_temp}
        {% if verbose %}
            RESPOND MSG="Extruder at safe temperature of {safe_extruder_temp} degrees"
        {% endif %}        
    {% else %}
        {% if printer.extruder.target < safe_extruder_temp %}
            M104 S{safe_extruder_temp} 
            {% if verbose %}
                RESPOND MSG="Extruder is heating at temperature of {safe_extruder_temp} degrees"
            {% endif %}
        {% else %}
            {% if verbose %}
                RESPOND MSG="Extruder is already hot"
            {% endif %}
        {% endif %}
    {% endif %} 


#[gcode_macro _MODULE_CUSTOM1]
#gcode:
    # ---- CUSTOM Macro section
    # this section is reserved for personal customized start actions, which can be combined with all other start actions
    # in order to use this, create a new macro in overrides.cfg
    # [gcode_macro _MODULE_CUSTOM1]
    # gcode:
    #   ## Your custom code here


[gcode_macro _MODULE_CUSTOM2]
gcode:
    M83
    G1 Z1 F2600
    G0 X-12 Y-55
    G1 Z0.4
    G1 E8 F600
    G92 E0
    G1 X10 E15 F300
    G92 E0
    G1 E-0.8 F2000
    G92 E0
    G1 Z3 F2600
    G1 X12 Y-53
    M400


[gcode_macro _MODULE_CUSTOM3]
gcode:
    # ---- CUSTOM Macro section
    # this section is reserved for personal customized start actions, which can be combined with all other start actions
    # in order to use this, create a new macro in overrides.cfg
    # [gcode_macro _MODULE_CUSTOM3]
    # gcode:
    #   ## Your custom code here

[gcode_macro END_PRINT]
description: Stop the print and filter the atmosphere for 10min before shuting down
gcode:
    {% set disable_motors_in_end_print = printer["gcode_macro _USER_VARIABLES"].disable_motors_in_end_print %}
    {% set turn_off_heaters_in_end_print = printer["gcode_macro _USER_VARIABLES"].turn_off_heaters_in_end_print %}
    {% set safe_extruder_temp = printer["gcode_macro _USER_VARIABLES"].safe_extruder_temp|float %}

    {% if printer.extruder.can_extrude %}
        # pull back the filament a little bit
        G92 E0
        G1 E-10 F2100
    {% endif %}

    PARK
    TURN_OFF_HEATERS

    M107
    M400
    BED_MESH_CLEAR

    {% if disable_motors_in_end_print %}
        M84
    {% endif %}


[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
description: Cancel the print, retract 10mm of filament and park
gcode:
    {% set turn_off_heaters_in_end_print = printer["gcode_macro _USER_VARIABLES"].turn_off_heaters_in_end_print %}
    {% set safe_extruder_temp = printer["gcode_macro _USER_VARIABLES"].safe_extruder_temp|float %}

    PARK

    {% if printer.extruder.can_extrude %}
        # Pull back the filament a little bit
        G92 E0
        G1 E-10 F2100
    {% endif %}

    {% if turn_off_heaters_in_end_print %}
        TURN_OFF_HEATERS
    {% else %}
        SET_HEATER_TEMPERATURE HEATER=extruder TARGET={safe_extruder_temp}
    {% endif %}

    M107
    M400

    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT